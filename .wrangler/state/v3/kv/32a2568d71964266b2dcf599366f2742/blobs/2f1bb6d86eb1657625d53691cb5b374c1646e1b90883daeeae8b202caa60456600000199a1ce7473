{"sessionId":"00625315-bb96-426e-abf9-4fac1063fea6","topic":"Rust","difficulty":"medium","questions":[{"id":1,"question":"What is the primary purpose of the `std::sync` module in Rust?","options":["To handle file I/O operations","To manage concurrency and synchronization","To create threads","To handle network connections"],"correctAnswer":1,"explanation":"The `std::sync` module in Rust provides functionality for managing concurrency and synchronization, including mutexes, atomic types, and more."},{"id":2,"question":"What is the difference between `&&` and `&` in Rust?","options":["`&&` is used for bitwise AND, while `&` is used for reference comparison","`&&` is used for reference comparison, while `&` is used for bitwise AND","Both `&&` and `&` are used for bitwise AND","Both `&&` and `&` are used for reference comparison"],"correctAnswer":0,"explanation":"In Rust, `&&` is used for bitwise AND, while `&` is used for reference comparison."},{"id":3,"question":"What is the purpose of the `unwrap` method in Rust?","options":["To handle errors in a program","To create a new thread","To handle file I/O operations","To panic the program if a value is `None`"],"correctAnswer":3,"explanation":"The `unwrap` method in Rust is used to panic the program if a value is `None`, making it a way to handle errors that are assumed to never occur."},{"id":4,"question":"What is the difference between `match` and `if let` in Rust?","options":["`match` is used for pattern matching, while `if let` is used for conditional statements","`match` is used for conditional statements, while `if let` is used for pattern matching","Both `match` and `if let` are used for pattern matching","Both `match` and `if let` are used for conditional statements"],"correctAnswer":0,"explanation":"In Rust, `match` is used for pattern matching, while `if let` is used for conditional statements."},{"id":5,"question":"What is the purpose of the `Result` type in Rust?","options":["To handle errors in a program","To create a new thread","To handle file I/O operations","To handle network connections"],"correctAnswer":0,"explanation":"The `Result` type in Rust is used to handle errors in a program, allowing you to propagate errors up the call stack."}],"totalQuestions":5,"currentQuestionIndex":4,"answers":[{"questionId":1,"question":"What is the primary purpose of the `std::sync` module in Rust?","userAnswer":1,"correctAnswer":1,"isCorrect":true,"explanation":"The `std::sync` module in Rust provides functionality for managing concurrency and synchronization, including mutexes, atomic types, and more.","timestamp":1759356223720},{"questionId":2,"question":"What is the difference between `&&` and `&` in Rust?","userAnswer":1,"correctAnswer":0,"isCorrect":false,"explanation":"In Rust, `&&` is used for bitwise AND, while `&` is used for reference comparison.","timestamp":1759356236949},{"questionId":3,"question":"What is the purpose of the `unwrap` method in Rust?","userAnswer":3,"correctAnswer":3,"isCorrect":true,"explanation":"The `unwrap` method in Rust is used to panic the program if a value is `None`, making it a way to handle errors that are assumed to never occur.","timestamp":1759356272724},{"questionId":4,"question":"What is the difference between `match` and `if let` in Rust?","userAnswer":0,"correctAnswer":0,"isCorrect":true,"explanation":"In Rust, `match` is used for pattern matching, while `if let` is used for conditional statements.","timestamp":1759356280516},{"questionId":5,"question":"What is the purpose of the `Result` type in Rust?","userAnswer":2,"correctAnswer":0,"isCorrect":false,"explanation":"The `Result` type in Rust is used to handle errors in a program, allowing you to propagate errors up the call stack.","timestamp":1759356286067}],"score":3,"completed":false,"startTime":1759356214482,"endTime":null}